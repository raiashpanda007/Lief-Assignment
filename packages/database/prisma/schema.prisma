generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role?
  worker    Worker?
  manager   Manager?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Worker {
  userId    String           @id
  user      User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  clockIns  ClockInRecord[]
  clockOuts ClockOutRecord[]
}

model Manager {
  userId   String @id
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  radius    Float 
  latitude  Float
  longitude Float
}

model ClockInRecord {
  id         String          @id @default(uuid())
  userId     String
  user       Worker          @relation(fields: [userId], references: [userId], onDelete: Cascade)
  timestamp  DateTime        @default(now())
  latitude   Float?
  longitude  Float?
  clockOut   ClockOutRecord?
  clockOutId String? 
}

model ClockOutRecord {
  id        String        @id @default(uuid())
  userId    String
  user      Worker        @relation(fields: [userId], references: [userId], onDelete: Cascade)
  timestamp DateTime      @default(now())
  message   String?
  latitude  Float
  longitude Float
  clockIn   ClockInRecord @relation(fields: [clockInId], references: [id])
  clockInId String        @unique 
}



enum Role {
  WORKER
  MANAGER
}
